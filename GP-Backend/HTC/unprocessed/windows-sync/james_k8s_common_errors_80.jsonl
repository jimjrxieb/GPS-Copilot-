{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
{"instruction": "Create a PersistentVolumeClaim\n\nProvision a 1Gi volume for a pod to mount as storage.\n\nCommon error: PVC stuck in Pending state", "input": "", "output": "Fix: Check if a matching PV exists or if dynamic provisioning is enabled (check StorageClass).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"PersistentVolumeClaim\",\n  \"metadata\": {\n    \"name\": \"data-pvc\"\n  },\n  \"spec\": {\n    \"accessModes\": [\n      \"ReadWriteOnce\"\n    ],\n    \"resources\": {\n      \"requests\": {\n        \"storage\": \"1Gi\"\n      }\n    }\n  }\n}"}
{"instruction": "Create a Kubernetes Deployment\n\nDefine a Deployment for a containerized web app with 3 replicas using NGINX.\n\nCommon error: Pods crashloop due to missing imagePullPolicy", "input": "", "output": "Fix: Explicitly define imagePullPolicy: Always in the container spec or verify latest tag behavior.\n\nExample:\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"nginx-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"nginx\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"nginx\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"nginx\",\n            \"image\": \"nginx:latest\",\n            \"ports\": [\n              {\n                \"containerPort\": 80\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}"}
{"instruction": "Expose a Kubernetes Deployment via Service\n\nCreate a Service to expose an existing deployment internally using ClusterIP.\n\nCommon error: Service doesn't forward traffic due to incorrect selector labels.", "input": "", "output": "Fix: Ensure the selector matches the pod labels exactly (`app: nginx`).\n\nExample:\n{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"name\": \"nginx-service\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"app\": \"nginx\"\n    },\n    \"ports\": [\n      {\n        \"protocol\": \"TCP\",\n        \"port\": 80,\n        \"targetPort\": 80\n      }\n    ],\n    \"type\": \"ClusterIP\"\n  }\n}"}
