{
  "meta": {
    "version": "1.0",
    "last_updated": "2025-10-13",
    "description": "Universal control catalog mapping across PCI-DSS, HIPAA, and NIST 800-53",
    "maintainer": "GP-Copilot / Jade AI"
  },
  "universal_controls": [
    {
      "id": "UC-001",
      "name": "Database Encryption at Rest",
      "description": "Ensure all databases encrypt data at rest using AES-256 or equivalent",
      "category": "Data Protection",
      "severity": "CRITICAL",
      "frameworks": {
        "cis": ["2.3.2"],
        "pci_dss": ["3.4", "3.5.1"],
        "hipaa": ["164.312(a)(2)(iv)"],
        "nist_800_53": ["SC-28", "SC-28(1)"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/cd/checkov_scanner.py",
        "fixer": "GP-CONSULTING/secops/3-fixers/auto-fixers/fix-rds-security.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/cloud-security-patterns/database-encryption.rego",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/rds-encrypted.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-encryption.sh"
      },
      "test_criteria": {
        "aws_rds": "StorageEncrypted == true && KmsKeyId != null",
        "aws_s3": "ServerSideEncryptionConfiguration.Rules[].ApplyServerSideEncryptionByDefault.SSEAlgorithm == 'aws:kms'",
        "azure_sql": "transparentDataEncryption.status == 'Enabled'"
      }
    },
    {
      "id": "UC-002",
      "name": "IAM Wildcard Prevention",
      "description": "Prevent IAM policies with overly permissive wildcards (Action: *, Resource: *)",
      "category": "Identity & Access Management",
      "severity": "HIGH",
      "frameworks": {
        "cis": ["1.16", "1.22"],
        "pci_dss": ["7.1.1", "7.2.1"],
        "hipaa": ["164.308(a)(3)(i)", "164.308(a)(4)(ii)(B)"],
        "nist_800_53": ["AC-6", "AC-6(1)", "AC-6(2)"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/cd/checkov_scanner.py",
        "fixer": "GP-CONSULTING/secops/3-fixers/auto-fixers/fix-iam-wildcards.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/cloud-security-patterns/zero-trust-sg/iam-least-privilege.rego",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/iam-restrictive.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-iam.sh"
      },
      "test_criteria": {
        "aws_iam": "Statement[].Action != ['*'] || Statement[].Resource != ['*']",
        "azure_rbac": "Actions != ['*'] && NotActions includes sensitive operations",
        "gcp_iam": "role.includedPermissions does not contain '*.*.'"
      }
    },
    {
      "id": "UC-003",
      "name": "S3 Bucket Encryption",
      "description": "All S3 buckets must have default encryption enabled (SSE-S3 or SSE-KMS)",
      "category": "Data Protection",
      "severity": "HIGH",
      "frameworks": {
        "cis": ["2.1.1"],
        "pci_dss": ["3.4", "3.5.1", "3.6.1"],
        "hipaa": ["164.312(a)(2)(iv)", "164.312(e)(2)(ii)"],
        "nist_800_53": ["SC-28", "SC-13"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/cd/checkov_scanner.py",
        "fixer": "GP-CONSULTING/secops/3-fixers/auto-fixers/fix-s3-encryption.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/cloud-security-patterns/s3-encryption.rego",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/s3-encrypted.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-s3.sh"
      },
      "test_criteria": {
        "aws_s3": "BucketEncryption.ServerSideEncryptionConfiguration.Rules[].ApplyServerSideEncryptionByDefault exists",
        "azure_storage": "encryption.services.blob.enabled == true",
        "gcp_storage": "encryption.defaultKmsKeyName != null"
      }
    },
    {
      "id": "UC-004",
      "name": "VPC Security Group Lockdown",
      "description": "Security groups must not allow 0.0.0.0/0 ingress on sensitive ports (22, 3389, 3306, 5432)",
      "category": "Network Security",
      "severity": "CRITICAL",
      "frameworks": {
        "cis": ["5.1", "5.2"],
        "pci_dss": ["1.2.1", "1.3.1", "1.3.2"],
        "hipaa": ["164.312(e)(1)"],
        "nist_800_53": ["SC-7", "SC-7(5)", "AC-4"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/cd/checkov_scanner.py",
        "fixer": "GP-CONSULTING/secops/3-fixers/cd-fixes/fix-security-groups.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/cloud-security-patterns/zero-trust-sg/security-group-lockdown.rego",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/security-groups-restrictive.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-network.sh"
      },
      "test_criteria": {
        "aws_sg": "IpPermissions[].IpRanges[].CidrIp != '0.0.0.0/0' when FromPort in [22, 3389, 3306, 5432]",
        "azure_nsg": "securityRules[].sourceAddressPrefix != '*' when destinationPortRange in ['22', '3389', '3306', '5432']",
        "gcp_firewall": "sourceRanges != ['0.0.0.0/0'] when allowed.ports in ['22', '3389', '3306', '5432']"
      }
    },
    {
      "id": "UC-005",
      "name": "CloudWatch Logging Enabled",
      "description": "All critical AWS services must have CloudWatch logging enabled with 90-day retention",
      "category": "Logging & Monitoring",
      "severity": "HIGH",
      "frameworks": {
        "cis": ["4.1", "4.3"],
        "pci_dss": ["10.2.1", "10.2.2", "10.3.1"],
        "hipaa": ["164.312(b)"],
        "nist_800_53": ["AU-2", "AU-6", "AU-11"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/runtime/query-cloudwatch.sh",
        "fixer": "GP-CONSULTING/secops/3-fixers/runtime-fixes/fix-cloudwatch-logging.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/cloud-security-patterns/logging-enabled.rego",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/cloudwatch-logs.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-logging.sh"
      },
      "test_criteria": {
        "aws_cloudwatch": "logGroup.retentionInDays >= 90",
        "azure_monitor": "diagnosticSettings.logs[].enabled == true && retentionPolicy.days >= 90",
        "gcp_logging": "sink.filter exists && bucket.retentionPolicy.retentionPeriod >= 7776000"
      }
    },
    {
      "id": "UC-006",
      "name": "Kubernetes RBAC Enforcement",
      "description": "Kubernetes clusters must have RBAC enabled with least-privilege service accounts",
      "category": "Identity & Access Management",
      "severity": "HIGH",
      "frameworks": {
        "cis": ["5.1.1", "5.1.5"],
        "pci_dss": ["7.1.1", "7.2.1"],
        "hipaa": ["164.308(a)(3)(i)", "164.308(a)(4)(ii)(C)"],
        "nist_800_53": ["AC-6", "AC-6(5)", "CM-7"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/cd/scan_kubernetes.py",
        "fixer": "GP-CONSULTING/secops/3-fixers/cd-fixes/fix-k8s-rbac.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/securebank/opa-gatekeeper/rbac-least-privilege.yaml",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/eks-rbac.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-k8s.sh"
      },
      "test_criteria": {
        "aws_eks": "cluster.resourcesVpcConfig.endpointPublicAccess == false && cluster.logging.clusterLogging[].enabled == true",
        "azure_aks": "aadProfile.managed == true && rbacEnabled == true",
        "gcp_gke": "masterAuth.clientCertificateConfig.issueClientCertificate == false"
      }
    },
    {
      "id": "UC-007",
      "name": "Container Image Scanning",
      "description": "All container images must be scanned for CVEs before deployment (block HIGH/CRITICAL)",
      "category": "Vulnerability Management",
      "severity": "CRITICAL",
      "frameworks": {
        "cis": ["5.2.1", "5.2.2"],
        "pci_dss": ["6.2", "6.3.2"],
        "hipaa": ["164.308(a)(5)(ii)(B)"],
        "nist_800_53": ["RA-5", "SI-2", "SI-2(2)"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/cd/trivy_scanner.py",
        "fixer": "GP-CONSULTING/secops/3-fixers/cd-fixes/fix-container-vulns.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/securebank/opa-gatekeeper/image-scanning-required.yaml",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/ecr-scanning.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-containers.sh"
      },
      "test_criteria": {
        "aws_ecr": "imageScanningConfiguration.scanOnPush == true",
        "azure_acr": "policies.quarantinePolicy.status == 'enabled'",
        "gcp_artifact_registry": "vulnerabilityScanningConfiguration.enabled == true"
      }
    },
    {
      "id": "UC-008",
      "name": "Automated Backup Verification",
      "description": "Database backups must be automated with encryption and tested restoration procedures",
      "category": "Data Protection",
      "severity": "HIGH",
      "frameworks": {
        "cis": ["2.3.3"],
        "pci_dss": ["3.4", "9.6.3"],
        "hipaa": ["164.308(a)(7)(ii)(A)", "164.310(d)(2)(iv)"],
        "nist_800_53": ["CP-9", "CP-9(1)", "CP-10"]
      },
      "implementation": {
        "scanner": "GP-CONSULTING/secops/1-scanners/runtime/query-backups.sh",
        "fixer": "GP-CONSULTING/secops/3-fixers/runtime-fixes/fix-backup-automation.sh",
        "opa_policy": "GP-CONSULTING/GP-POL-AS-CODE/cloud-security-patterns/backup-automation.rego",
        "terraform": "GP-CONSULTING/GP-POL-AS-CODE/securebank/terraform/rds-backup.tf",
        "validation": "GP-CONSULTING/secops/5-validators/validate-backups.sh"
      },
      "test_criteria": {
        "aws_rds": "BackupRetentionPeriod >= 7 && PreferredBackupWindow exists && BackupTarget == 'region'",
        "azure_sql": "backupShortTermRetentionPolicy.retentionDays >= 7 && longTermRetentionPolicy exists",
        "gcp_sql": "settings.backupConfiguration.enabled == true && settings.backupConfiguration.pointInTimeRecoveryEnabled == true"
      }
    }
  ],
  "cross_framework_mappings": {
    "database_security": {
      "controls": ["UC-001", "UC-008"],
      "pci_dss": ["3.4", "3.5.1", "9.6.3"],
      "hipaa": ["164.312(a)(2)(iv)", "164.308(a)(7)(ii)(A)"],
      "nist_800_53": ["SC-28", "CP-9"],
      "compliance_percentage_weight": 15
    },
    "identity_access": {
      "controls": ["UC-002", "UC-006"],
      "pci_dss": ["7.1.1", "7.2.1"],
      "hipaa": ["164.308(a)(3)(i)", "164.308(a)(4)(ii)(B)"],
      "nist_800_53": ["AC-6", "AC-6(1)"],
      "compliance_percentage_weight": 20
    },
    "network_security": {
      "controls": ["UC-004"],
      "pci_dss": ["1.2.1", "1.3.1"],
      "hipaa": ["164.312(e)(1)"],
      "nist_800_53": ["SC-7", "AC-4"],
      "compliance_percentage_weight": 15
    },
    "logging_monitoring": {
      "controls": ["UC-005"],
      "pci_dss": ["10.2.1", "10.3.1"],
      "hipaa": ["164.312(b)"],
      "nist_800_53": ["AU-2", "AU-6"],
      "compliance_percentage_weight": 15
    },
    "vulnerability_management": {
      "controls": ["UC-007"],
      "pci_dss": ["6.2", "6.3.2"],
      "hipaa": ["164.308(a)(5)(ii)(B)"],
      "nist_800_53": ["RA-5", "SI-2"],
      "compliance_percentage_weight": 20
    },
    "data_protection": {
      "controls": ["UC-003"],
      "pci_dss": ["3.4", "3.6.1"],
      "hipaa": ["164.312(a)(2)(iv)", "164.312(e)(2)(ii)"],
      "nist_800_53": ["SC-28", "SC-13"],
      "compliance_percentage_weight": 15
    }
  }
}
